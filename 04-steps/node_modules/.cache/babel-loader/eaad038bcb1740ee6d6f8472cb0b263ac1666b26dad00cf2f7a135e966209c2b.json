{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\WoltersWorkPractice\\\\GitHub-Repo\\\\Udemy-Ultimate_React_Course_2023\\\\MyCode\\\\04-steps\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst messages = [\"Learn React ‚öõÔ∏è\", \"Apply for jobs üíº\", \"Invest your new income ü§ë\"];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Steps, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction Steps() {\n  _s();\n  const [step, setStep] = useState(1); //useState returns array with 2 elements\n  // We destructure them - 1) State with initial value(given in brackets) 2) setter method for state\n  // We can only call useState at top level of a functional component (not inside any other function)\n  // Also it can not be called conditionally (Inside if statement)\n\n  const [isOpen, setIsOpen] = useState(true);\n\n  // Commented for trial of current state based update\n  // function handlePrevious() {\n  //   if (step > 1) setStep(step - 1);\n  //   // React state must be modified through setter function only, not manually\n  // }\n\n  // function handleNext() {\n  //   if (step < 3) setStep(step + 1);\n  // }\n\n  // For trial of updating state based on current state\n  function handlePrevious() {\n    if (step > 1) setStep(s => s - 1);\n    // React state must be modified through setter function only, not manually\n  }\n\n  function handleNext() {\n    if (step < 3) {\n      // setStep(step + 1);\n      // setStep(step + 1); //Its a bad way of updating state twice and will not work\n      // setStep((s) => s + 1);\n      setStep(s => s + 1); //This will work correctly\n    }\n  }\n\n  // //Trying to update react state manually\n  // var [step, setStep] = useState(1);\n  // const [test] = useState({ name: \"Jonas\" });\n\n  // function handlePrevious() {\n  //   if (step > 1) setStep(step - 1);\n  //   test.name = \"Fred\"; //Will work but its a BAD PRACTICE, This might not work in complex situations\n  // }\n\n  // function handleNext() {\n  //   step = step + 1;\n  //   // This will change the value of state internally but\n  //   // React does not know that we are updating state here hence it is not re-rendering the component\n  // }\n  // // Hence always treat state as immutable in react and only update it with given setter function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close\",\n      onClick: () => setIsOpen(is => !is),\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${step >= 1 ? \"active\" : \"\"}`,\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${step >= 2 ? \"active\" : \"\"}`,\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${step >= 3 ? \"active\" : \"\"}`,\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Step \", step]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), \" \", messages[step - 1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          bgColor: \"#7950f2\",\n          textColor: \"#fff\",\n          onClick: handlePrevious,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC48\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), \" Previous\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          bgColor: \"#7950f2\",\n          textColor: \"#fff\",\n          onClick: handleNext,\n          children: [\"Next \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC49\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Steps, \"lY6Y6OgA1ykwiOxUlvmVfg+enJI=\");\n_c2 = Steps;\nfunction Button({\n  textColor,\n  bgColor,\n  onClick,\n  children\n}) {\n  // The jsx passed between opening and closing tag of this component declaration is captured in \"children\" prop, children is a keyword\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: bgColor,\n      color: textColor\n    },\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Button;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Steps\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","messages","App","children","Steps","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","step","setStep","isOpen","setIsOpen","handlePrevious","s","handleNext","className","onClick","is","Button","bgColor","textColor","_c2","style","backgroundColor","color","_c3","$RefreshReg$"],"sources":["E:/Work/WoltersWorkPractice/GitHub-Repo/Udemy-Ultimate_React_Course_2023/MyCode/04-steps/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst messages = [\n  \"Learn React ‚öõÔ∏è\",\n  \"Apply for jobs üíº\",\n  \"Invest your new income ü§ë\",\n];\n\nexport default function App() {\n  return (\n    <div>\n      <Steps />\n    </div>\n  );\n}\n\nfunction Steps() {\n  const [step, setStep] = useState(1); //useState returns array with 2 elements\n  // We destructure them - 1) State with initial value(given in brackets) 2) setter method for state\n  // We can only call useState at top level of a functional component (not inside any other function)\n  // Also it can not be called conditionally (Inside if statement)\n\n  const [isOpen, setIsOpen] = useState(true);\n\n  // Commented for trial of current state based update\n  // function handlePrevious() {\n  //   if (step > 1) setStep(step - 1);\n  //   // React state must be modified through setter function only, not manually\n  // }\n\n  // function handleNext() {\n  //   if (step < 3) setStep(step + 1);\n  // }\n\n  // For trial of updating state based on current state\n  function handlePrevious() {\n    if (step > 1) setStep((s) => s - 1);\n    // React state must be modified through setter function only, not manually\n  }\n\n  function handleNext() {\n    if (step < 3) {\n      // setStep(step + 1);\n      // setStep(step + 1); //Its a bad way of updating state twice and will not work\n      // setStep((s) => s + 1);\n      setStep((s) => s + 1); //This will work correctly\n    }\n  }\n\n  // //Trying to update react state manually\n  // var [step, setStep] = useState(1);\n  // const [test] = useState({ name: \"Jonas\" });\n\n  // function handlePrevious() {\n  //   if (step > 1) setStep(step - 1);\n  //   test.name = \"Fred\"; //Will work but its a BAD PRACTICE, This might not work in complex situations\n  // }\n\n  // function handleNext() {\n  //   step = step + 1;\n  //   // This will change the value of state internally but\n  //   // React does not know that we are updating state here hence it is not re-rendering the component\n  // }\n  // // Hence always treat state as immutable in react and only update it with given setter function\n\n  return (\n    <>\n      {/* <button className=\"close\" onClick={() => setIsOpen(!isOpen)}> */}\n      <button className=\"close\" onClick={() => setIsOpen((is) => !is)}>\n        {/* it is a better and safer way of doing it using callback*/}\n        &times;\n      </button>\n      {isOpen && (\n        <div className=\"steps\">\n          <div className=\"numbers\">\n            <div className={`${step >= 1 ? \"active\" : \"\"}`}>1</div>\n            <div className={`${step >= 2 ? \"active\" : \"\"}`}>2</div>\n            <div className={`${step >= 3 ? \"active\" : \"\"}`}>3</div>\n          </div>\n\n          <p className=\"message\">\n            <h3>Step {step}</h3> {messages[step - 1]}\n          </p>\n\n          <div className=\"buttons\">\n            <Button bgColor=\"#7950f2\" textColor=\"#fff\" onClick={handlePrevious}>\n              {/* The jsx which is passed between opening and closing tag will be captured in children prop of child component */}\n              <span>üëà</span> Previous\n              {/* hence we can configure here as if we want span first or the text. such customization helps to make the component truely reusable  */}\n            </Button>\n            <Button bgColor=\"#7950f2\" textColor=\"#fff\" onClick={handleNext}>\n              Next <span>üëâ</span>\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction Button({ textColor, bgColor, onClick, children }) {\n  // The jsx passed between opening and closing tag of this component declaration is captured in \"children\" prop, children is a keyword\n  return (\n    <button\n      style={{ backgroundColor: bgColor, color: textColor }}\n      onClick={onClick}\n    >\n      {children}\n      {/* jsx in children prop can be rendered as regular jsx as here */}\n    </button>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,QAAQ,GAAG,CACf,gBAAgB,EAChB,mBAAmB,EACnB,2BAA2B,CAC5B;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACEJ,OAAA;IAAAK,QAAA,eACEL,OAAA,CAACM,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACC,EAAA,GANuBP,GAAG;AAQ3B,SAASE,KAAKA,CAAA,EAAG;EAAAM,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC;EACA;EACA;;EAEA,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA,SAASmB,cAAcA,CAAA,EAAG;IACxB,IAAIJ,IAAI,GAAG,CAAC,EAAEC,OAAO,CAAEI,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;IACnC;EACF;;EAEA,SAASC,UAAUA,CAAA,EAAG;IACpB,IAAIN,IAAI,GAAG,CAAC,EAAE;MACZ;MACA;MACA;MACAC,OAAO,CAAEI,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB;EACF;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACElB,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBAEEL,OAAA;MAAQoB,SAAS,EAAC,OAAO;MAACC,OAAO,EAAEA,CAAA,KAAML,SAAS,CAAEM,EAAE,IAAK,CAACA,EAAE,CAAE;MAAAjB,QAAA,EACA;IAEhE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRK,MAAM,iBACLf,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAf,QAAA,gBACpBL,OAAA;QAAKoB,SAAS,EAAC,SAAS;QAAAf,QAAA,gBACtBL,OAAA;UAAKoB,SAAS,EAAG,GAAEP,IAAI,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAG,EAAE;UAAAR,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvDV,OAAA;UAAKoB,SAAS,EAAG,GAAEP,IAAI,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAG,EAAE;UAAAR,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvDV,OAAA;UAAKoB,SAAS,EAAG,GAAEP,IAAI,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAG,EAAE;UAAAR,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAENV,OAAA;QAAGoB,SAAS,EAAC,SAAS;QAAAf,QAAA,gBACpBL,OAAA;UAAAK,QAAA,GAAI,OAAK,EAACQ,IAAI;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,EAACP,QAAQ,CAACU,IAAI,GAAG,CAAC,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAEJV,OAAA;QAAKoB,SAAS,EAAC,SAAS;QAAAf,QAAA,gBACtBL,OAAA,CAACuB,MAAM;UAACC,OAAO,EAAC,SAAS;UAACC,SAAS,EAAC,MAAM;UAACJ,OAAO,EAAEJ,cAAe;UAAAZ,QAAA,gBAEjEL,OAAA;YAAAK,QAAA,EAAM;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,aACf;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACTV,OAAA,CAACuB,MAAM;UAACC,OAAO,EAAC,SAAS;UAACC,SAAS,EAAC,MAAM;UAACJ,OAAO,EAAEF,UAAW;UAAAd,QAAA,GAAC,OACzD,eAAAL,OAAA;YAAAK,QAAA,EAAM;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eACD,CAAC;AAEP;AAACE,EAAA,CAlFQN,KAAK;AAAAoB,GAAA,GAALpB,KAAK;AAoFd,SAASiB,MAAMA,CAAC;EAAEE,SAAS;EAAED,OAAO;EAAEH,OAAO;EAAEhB;AAAS,CAAC,EAAE;EACzD;EACA,oBACEL,OAAA;IACE2B,KAAK,EAAE;MAAEC,eAAe,EAAEJ,OAAO;MAAEK,KAAK,EAAEJ;IAAU,CAAE;IACtDJ,OAAO,EAAEA,OAAQ;IAAAhB,QAAA,EAEhBA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEb;AAACoB,GAAA,GAXQP,MAAM;AAAA,IAAAZ,EAAA,EAAAe,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}