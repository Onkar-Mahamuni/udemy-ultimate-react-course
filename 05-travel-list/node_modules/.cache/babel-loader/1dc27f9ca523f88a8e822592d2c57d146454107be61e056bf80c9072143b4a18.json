{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\WoltersWorkPractice\\\\GitHub-Repo\\\\Udemy-Ultimate_React_Course_2023\\\\MyCode\\\\05-travel-list\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form({\n  onAddItems\n}) {\n  _s();\n  const [description, setDescription] = useState(\"\"); //Here react is setting description to empty string\n  // even if we are changing the input, hence we need handleChange function\n  const [quantity, setQuantity] = useState(1);\n  function handleSubmit(e) {\n    e.preventDefault(); //To stop page auto refreshing after submit\n\n    if (!description) return; // We shouldn't be able to submit with blank description\n\n    const newItem = {\n      description,\n      quantity,\n      packed: false,\n      id: Date.now()\n    };\n    onAddItems(newItem);\n    setDescription(\"\");\n    setQuantity(1); //Setting elements back to their initial state after submitting\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What do you need for your \\uD83D\\uDE0D trip?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: quantity,\n      onChange: e => setQuantity(Number(e.target.value)),\n      children: Array.from({\n        length: 20\n      }, (_, i) => i + 1).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: num,\n        children: num\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Item...\",\n      value: description // DOM is not incharge of this value anymore\n      ,\n      onChange: e => setDescription(e.target.value) // This updates the state with actual value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"N0tyIIElQ4BYmJ0Mle1ZnU9F/l4=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Form","onAddItems","_s","description","setDescription","quantity","setQuantity","handleSubmit","e","preventDefault","newItem","packed","id","Date","now","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","Number","target","Array","from","length","_","i","map","num","type","placeholder","_c","$RefreshReg$"],"sources":["E:/Work/WoltersWorkPractice/GitHub-Repo/Udemy-Ultimate_React_Course_2023/MyCode/05-travel-list/src/components/Form.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Form({ onAddItems }) {\r\n  const [description, setDescription] = useState(\"\"); //Here react is setting description to empty string\r\n  // even if we are changing the input, hence we need handleChange function\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault(); //To stop page auto refreshing after submit\r\n\r\n    if (!description) return; // We shouldn't be able to submit with blank description\r\n\r\n    const newItem = { description, quantity, packed: false, id: Date.now() };\r\n\r\n    onAddItems(newItem);\r\n\r\n    setDescription(\"\");\r\n    setQuantity(1); //Setting elements back to their initial state after submitting\r\n  }\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={handleSubmit}>\r\n      {/* We can also listen to onclick event of button but it will not work after hitting enter key,\r\n        Hence it is important to listen to on submit of form here */}\r\n      <h3>What do you need for your üòç trip?</h3>\r\n      <select\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(Number(e.target.value))}\r\n      >\r\n        {/* e.target.value will always be a string but we want a number there */}\r\n        {Array.from({ length: 20 }, (_, i) => i + 1).map((num) => (\r\n          <option value={num} key={num}>\r\n            {num}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {/* To make array of X elements */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Item...\"\r\n        value={description} // DOM is not incharge of this value anymore\r\n        onChange={(e) => setDescription(e.target.value)} // This updates the state with actual value\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD;EACA,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE3C,SAASU,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAI,CAACN,WAAW,EAAE,OAAO,CAAC;;IAE1B,MAAMO,OAAO,GAAG;MAAEP,WAAW;MAAEE,QAAQ;MAAEM,MAAM,EAAE,KAAK;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IAExEb,UAAU,CAACS,OAAO,CAAC;IAEnBN,cAAc,CAAC,EAAE,CAAC;IAClBE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB;;EAEA,oBACEP,OAAA;IAAMgB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAGhDlB,OAAA;MAAAkB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CtB,OAAA;MACEuB,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGf,CAAC,IAAKF,WAAW,CAACkB,MAAM,CAAChB,CAAC,CAACiB,MAAM,CAACH,KAAK,CAAC,CAAE;MAAAL,QAAA,EAGpDS,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,iBACnDjC,OAAA;QAAQuB,KAAK,EAAEU,GAAI;QAAAf,QAAA,EAChBe;MAAG,GADmBA,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETtB,OAAA;MACEkC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBZ,KAAK,EAAEnB,WAAY,CAAC;MAAA;MACpBoB,QAAQ,EAAGf,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACiB,MAAM,CAACH,KAAK,CAAE,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFtB,OAAA;MAAAkB,QAAA,EAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEX;AAACnB,EAAA,CA5CuBF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}