{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\WoltersWorkPractice\\\\GitHub-Repo\\\\Udemy-Ultimate_React_Course_2023\\\\MyCode\\\\05-travel-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  id: 1,\n  description: \"Passports\",\n  quantity: 2,\n  packed: false\n}, {\n  id: 2,\n  description: \"Socks\",\n  quantity: 12,\n  packed: true\n}, {\n  id: 3,\n  description: \"Charger\",\n  quantity: 1,\n  packed: false\n}];\nexport default function App() {\n  _s();\n  const [items, setItems] = useState([]);\n  // const [numItems, setNumItems] = useState(0); // Unnecessary\n  // const numItems = items.length; //as soon as state changes, component will get rerendered and this code wil be executed\n  // But instead doing that here, we can do this in the componet where we need to cosume it to avoid passing props\n  function handleAddItems(item) {\n    setItems(items => [...items, item]);\n    // setNumItems((num) => num + 1); // This state and operation is unnecessary because it a computed state\n  }\n\n  function handleDeleteItem(id) {\n    setItems(items => items.filter(item => item.id !== id));\n  }\n  function handleToggleItem(id) {\n    console.log(\"handle toggle id \" + id);\n    setItems(items => items.map(item => item.id === id ? {\n      ...item,\n      packed: !item.packed\n    } : item));\n  }\n\n  //OR\n  // function handleToggleItem(id) {\n  //   console.log(\"handle toggle id \" + id);\n  //   setItems((items) =>\n  //     items.map((item) =>{\n  //       return item.id === id ? { ...item, packed: !item.packed } : item // If we are wrapping array callback function in curly braces, then we explicitly need to add return keyword\n  // })\n  //   );\n  // }\n\n  function handleClearList() {\n    const confirmed = window.confirm(\"Are you sure you want to delete all items?\"); //This is to add a confirmation message before deleting\n    if (confirmed) setItems([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onAddItems: handleAddItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PackingList, {\n      items: items,\n      onDeleteItem: handleDeleteItem,\n      onToggleItems: handleToggleItem,\n      onClearList: handleClearList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nfunction Form({\n  onAddItems\n}) {\n  _s2();\n  const [description, setDescription] = useState(\"\"); //Here react is setting description to empty string\n  // even if we are changing the input, hence we need handleChange function\n  const [quantity, setQuantity] = useState(1);\n  function handleSubmit(e) {\n    e.preventDefault(); //To stop page auto refreshing after submit\n\n    if (!description) return; // We shouldn't be able to submit with blank description\n\n    const newItem = {\n      description,\n      quantity,\n      packed: false,\n      id: Date.now()\n    };\n    onAddItems(newItem);\n    setDescription(\"\");\n    setQuantity(1); //Setting elements back to their initial state after submitting\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What do you need for your \\uD83D\\uDE0D trip?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: quantity,\n      onChange: e => setQuantity(Number(e.target.value)),\n      children: Array.from({\n        length: 20\n      }, (_, i) => i + 1).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: num,\n        children: num\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Item...\",\n      value: description // DOM is not incharge of this value anymore\n      ,\n      onChange: e => setDescription(e.target.value) // This updates the state with actual value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s2(Form, \"N0tyIIElQ4BYmJ0Mle1ZnU9F/l4=\");\n_c2 = Form;\nfunction PackingList({\n  items,\n  onDeleteItem,\n  onToggleItems,\n  onClearList\n}) {\n  _s3();\n  const [sortBy, setSortBy] = useState(\"input\");\n  let sortedItems;\n  if (sortBy === \"input\") sortedItems = items;\n  if (sortBy === \"description\") sortedItems = items.slice() // Without .slice() here, the original array will also get sorted which we don't want\n  .sort((a, b) => a.description.localeCompare(b.description));\n  if (sortBy === \"packed\") sortedItems = items.slice() // Without .slice() here, the original array will also get sorted which we don't want\n  .sort((a, b) => Number(a.packed) - Number(b.packed));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedItems.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        onDeleteItem: onDeleteItem,\n        onToggleItems: onToggleItems,\n        hand: true\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"input\",\n          children: \"Sort by input order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"description\",\n          children: \"Sort by description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"packed\",\n          children: \"Sort by packed status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearList,\n        children: \"Clear List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s3(PackingList, \"3HXYaurhTOKrR4QsMAxSV7huNGI=\");\n_c3 = PackingList;\nfunction Item({\n  item,\n  onDeleteItem,\n  onToggleItems\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: item.packed,\n      onChange: () => onToggleItems(item.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: item.packed ? {\n        textDecoration: \"line-through\"\n      } : {},\n      children: [item.quantity, item.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDeleteItem(item.id),\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Item;\nfunction Stats({\n  items\n}) {\n  if (!items.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"stats\",\n    children: /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Start adding some items to your packing list \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 7\n  }, this); //This is an example of early return which can be usead instead of below method\n\n  const numItems = items.length;\n  const numPacked = items.filter(item => item.packed).length;\n  const percentage = Math.round(numPacked / numItems * 100);\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"stats\",\n    children: /*#__PURE__*/_jsxDEV(\"em\", {\n      children: percentage === 100 ? \"You got everything! Ready to go ✈️\" : `👜 You have ${numItems} items on your list, and you already packed\n        ${numPacked} (${percentage}%)`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Stats;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"PackingList\");\n$RefreshReg$(_c4, \"Item\");\n$RefreshReg$(_c5, \"Stats\");","map":{"version":3,"names":["useState","Logo","jsxDEV","_jsxDEV","initialItems","id","description","quantity","packed","App","_s","items","setItems","handleAddItems","item","handleDeleteItem","filter","handleToggleItem","console","log","map","handleClearList","confirmed","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Form","onAddItems","PackingList","onDeleteItem","onToggleItems","onClearList","Stats","_c","_s2","setDescription","setQuantity","handleSubmit","e","preventDefault","newItem","Date","now","onSubmit","value","onChange","Number","target","Array","from","length","_","i","num","type","placeholder","_c2","_s3","sortBy","setSortBy","sortedItems","slice","sort","a","b","localeCompare","Item","hand","onClick","_c3","style","textDecoration","_c4","numItems","numPacked","percentage","Math","round","_c5","$RefreshReg$"],"sources":["E:/Work/WoltersWorkPractice/GitHub-Repo/Udemy-Ultimate_React_Course_2023/MyCode/05-travel-list/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Logo from \"./Logo\";\n\nconst initialItems = [\n  { id: 1, description: \"Passports\", quantity: 2, packed: false },\n  { id: 2, description: \"Socks\", quantity: 12, packed: true },\n  { id: 3, description: \"Charger\", quantity: 1, packed: false },\n];\n\nexport default function App() {\n  const [items, setItems] = useState([]);\n  // const [numItems, setNumItems] = useState(0); // Unnecessary\n  // const numItems = items.length; //as soon as state changes, component will get rerendered and this code wil be executed\n  // But instead doing that here, we can do this in the componet where we need to cosume it to avoid passing props\n  function handleAddItems(item) {\n    setItems((items) => [...items, item]);\n    // setNumItems((num) => num + 1); // This state and operation is unnecessary because it a computed state\n  }\n\n  function handleDeleteItem(id) {\n    setItems((items) => items.filter((item) => item.id !== id));\n  }\n\n  function handleToggleItem(id) {\n    console.log(\"handle toggle id \" + id);\n    setItems((items) =>\n      items.map((item) =>\n        item.id === id ? { ...item, packed: !item.packed } : item\n      )\n    );\n  }\n\n  //OR\n  // function handleToggleItem(id) {\n  //   console.log(\"handle toggle id \" + id);\n  //   setItems((items) =>\n  //     items.map((item) =>{\n  //       return item.id === id ? { ...item, packed: !item.packed } : item // If we are wrapping array callback function in curly braces, then we explicitly need to add return keyword\n  // })\n  //   );\n  // }\n\n  function handleClearList() {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete all items?\"\n    ); //This is to add a confirmation message before deleting\n    if (confirmed) setItems([]);\n  }\n\n  return (\n    <div className=\"app\">\n      <Logo />\n      <Form onAddItems={handleAddItems} />\n      <PackingList\n        items={items}\n        onDeleteItem={handleDeleteItem}\n        onToggleItems={handleToggleItem}\n        onClearList={handleClearList}\n      />\n      <Stats items={items} />\n    </div>\n  );\n}\n\nfunction Form({ onAddItems }) {\n  const [description, setDescription] = useState(\"\"); //Here react is setting description to empty string\n  // even if we are changing the input, hence we need handleChange function\n  const [quantity, setQuantity] = useState(1);\n\n  function handleSubmit(e) {\n    e.preventDefault(); //To stop page auto refreshing after submit\n\n    if (!description) return; // We shouldn't be able to submit with blank description\n\n    const newItem = { description, quantity, packed: false, id: Date.now() };\n\n    onAddItems(newItem);\n\n    setDescription(\"\");\n    setQuantity(1); //Setting elements back to their initial state after submitting\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={handleSubmit}>\n      {/* We can also listen to onclick event of button but it will not work after hitting enter key,\n      Hence it is important to listen to on submit of form here */}\n      <h3>What do you need for your 😍 trip?</h3>\n      <select\n        value={quantity}\n        onChange={(e) => setQuantity(Number(e.target.value))}\n      >\n        {/* e.target.value will always be a string but we want a number there */}\n        {Array.from({ length: 20 }, (_, i) => i + 1).map((num) => (\n          <option value={num} key={num}>\n            {num}\n          </option>\n        ))}\n      </select>\n      {/* To make array of X elements */}\n      <input\n        type=\"text\"\n        placeholder=\"Item...\"\n        value={description} // DOM is not incharge of this value anymore\n        onChange={(e) => setDescription(e.target.value)} // This updates the state with actual value\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nfunction PackingList({ items, onDeleteItem, onToggleItems, onClearList }) {\n  const [sortBy, setSortBy] = useState(\"input\");\n\n  let sortedItems;\n\n  if (sortBy === \"input\") sortedItems = items;\n\n  if (sortBy === \"description\")\n    sortedItems = items\n      .slice() // Without .slice() here, the original array will also get sorted which we don't want\n      .sort((a, b) => a.description.localeCompare(b.description));\n\n  if (sortBy === \"packed\")\n    sortedItems = items\n      .slice() // Without .slice() here, the original array will also get sorted which we don't want\n      .sort((a, b) => Number(a.packed) - Number(b.packed));\n\n  return (\n    <div className=\"list\">\n      <ul>\n        {sortedItems.map((item) => (\n          <Item\n            item={item}\n            onDeleteItem={onDeleteItem}\n            onToggleItems={onToggleItems}\n            key={item.id}\n            hand\n          />\n        ))}\n      </ul>\n\n      <div className=\"actions\">\n        <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n          <option value=\"input\">Sort by input order</option>\n          <option value=\"description\">Sort by description</option>\n          <option value=\"packed\">Sort by packed status</option>\n        </select>\n        <button onClick={onClearList}>Clear List</button>\n      </div>\n    </div>\n  );\n}\n\nfunction Item({ item, onDeleteItem, onToggleItems }) {\n  return (\n    <li>\n      <input\n        type=\"checkbox\"\n        value={item.packed}\n        onChange={() => onToggleItems(item.id)}\n      />\n      <span style={item.packed ? { textDecoration: \"line-through\" } : {}}>\n        {item.quantity}\n        {item.description}\n      </span>\n      <button onClick={() => onDeleteItem(item.id)}>❌</button>\n      {/* Here the function is passed through props and then we are updating the state through that function */}\n    </li>\n  );\n}\n\nfunction Stats({ items }) {\n  if (!items.length)\n    return (\n      <p className=\"stats\">\n        <em>Start adding some items to your packing list 🚀</em>\n      </p>\n    ); //This is an example of early return which can be usead instead of below method\n\n  const numItems = items.length;\n  const numPacked = items.filter((item) => item.packed).length;\n  const percentage = Math.round((numPacked / numItems) * 100);\n  return (\n    <footer className=\"stats\">\n      <em>\n        {percentage === 100\n          ? \"You got everything! Ready to go ✈️\"\n          : `👜 You have ${numItems} items on your list, and you already packed\n        ${numPacked} (${percentage}%)`}\n      </em>\n    </footer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}