{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\WoltersWorkPractice\\\\GitHub-Repo\\\\Udemy-Ultimate_React_Course_2023\\\\MyCode\\\\05-travel-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport Form from \"./Form\";\nimport PackingList from \"./PackingList\";\nimport { Stats } from \"./Stats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  id: 1,\n  description: \"Passports\",\n  quantity: 2,\n  packed: false\n}, {\n  id: 2,\n  description: \"Socks\",\n  quantity: 12,\n  packed: true\n}, {\n  id: 3,\n  description: \"Charger\",\n  quantity: 1,\n  packed: false\n}];\nexport default function App() {\n  _s();\n  const [items, setItems] = useState([]);\n  // const [numItems, setNumItems] = useState(0); // Unnecessary\n  // const numItems = items.length; //as soon as state changes, component will get rerendered and this code wil be executed\n  // But instead doing that here, we can do this in the componet where we need to cosume it to avoid passing props\n  function handleAddItems(item) {\n    setItems(items => [...items, item]);\n    // setNumItems((num) => num + 1); // This state and operation is unnecessary because it a computed state\n  }\n\n  function handleDeleteItem(id) {\n    setItems(items => items.filter(item => item.id !== id));\n  }\n  function handleToggleItem(id) {\n    console.log(\"handle toggle id \" + id);\n    setItems(items => items.map(item => item.id === id ? {\n      ...item,\n      packed: !item.packed\n    } : item));\n  }\n\n  //OR\n  // function handleToggleItem(id) {\n  //   console.log(\"handle toggle id \" + id);\n  //   setItems((items) =>\n  //     items.map((item) =>{\n  //       return item.id === id ? { ...item, packed: !item.packed } : item // If we are wrapping array callback function in curly braces, then we explicitly need to add return keyword\n  // })\n  //   );\n  // }\n\n  function handleClearList() {\n    const confirmed = window.confirm(\"Are you sure you want to delete all items?\"); //This is to add a confirmation message before deleting\n    if (confirmed) setItems([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onAddItems: handleAddItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PackingList, {\n      items: items,\n      onDeleteItem: handleDeleteItem,\n      onToggleItems: handleToggleItem,\n      onClearList: handleClearList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Logo","Form","PackingList","Stats","jsxDEV","_jsxDEV","initialItems","id","description","quantity","packed","App","_s","items","setItems","handleAddItems","item","handleDeleteItem","filter","handleToggleItem","console","log","map","handleClearList","confirmed","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddItems","onDeleteItem","onToggleItems","onClearList","_c","$RefreshReg$"],"sources":["E:/Work/WoltersWorkPractice/GitHub-Repo/Udemy-Ultimate_React_Course_2023/MyCode/05-travel-list/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport Form from \"./Form\";\nimport PackingList from \"./PackingList\";\nimport { Stats } from \"./Stats\";\n\nconst initialItems = [\n  { id: 1, description: \"Passports\", quantity: 2, packed: false },\n  { id: 2, description: \"Socks\", quantity: 12, packed: true },\n  { id: 3, description: \"Charger\", quantity: 1, packed: false },\n];\n\nexport default function App() {\n  const [items, setItems] = useState([]);\n  // const [numItems, setNumItems] = useState(0); // Unnecessary\n  // const numItems = items.length; //as soon as state changes, component will get rerendered and this code wil be executed\n  // But instead doing that here, we can do this in the componet where we need to cosume it to avoid passing props\n  function handleAddItems(item) {\n    setItems((items) => [...items, item]);\n    // setNumItems((num) => num + 1); // This state and operation is unnecessary because it a computed state\n  }\n\n  function handleDeleteItem(id) {\n    setItems((items) => items.filter((item) => item.id !== id));\n  }\n\n  function handleToggleItem(id) {\n    console.log(\"handle toggle id \" + id);\n    setItems((items) =>\n      items.map((item) =>\n        item.id === id ? { ...item, packed: !item.packed } : item\n      )\n    );\n  }\n\n  //OR\n  // function handleToggleItem(id) {\n  //   console.log(\"handle toggle id \" + id);\n  //   setItems((items) =>\n  //     items.map((item) =>{\n  //       return item.id === id ? { ...item, packed: !item.packed } : item // If we are wrapping array callback function in curly braces, then we explicitly need to add return keyword\n  // })\n  //   );\n  // }\n\n  function handleClearList() {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete all items?\"\n    ); //This is to add a confirmation message before deleting\n    if (confirmed) setItems([]);\n  }\n\n  return (\n    <div className=\"app\">\n      <Logo />\n      <Form onAddItems={handleAddItems} />\n      <PackingList\n        items={items}\n        onDeleteItem={handleDeleteItem}\n        onToggleItems={handleToggleItem}\n        onClearList={handleClearList}\n      />\n      <Stats items={items} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,CAAC;EAAEC,WAAW,EAAE,WAAW;EAAEC,QAAQ,EAAE,CAAC;EAAEC,MAAM,EAAE;AAAM,CAAC,EAC/D;EAAEH,EAAE,EAAE,CAAC;EAAEC,WAAW,EAAE,OAAO;EAAEC,QAAQ,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAK,CAAC,EAC3D;EAAEH,EAAE,EAAE,CAAC;EAAEC,WAAW,EAAE,SAAS;EAAEC,QAAQ,EAAE,CAAC;EAAEC,MAAM,EAAE;AAAM,CAAC,CAC9D;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA;EACA,SAASgB,cAAcA,CAACC,IAAI,EAAE;IAC5BF,QAAQ,CAAED,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAEG,IAAI,CAAC,CAAC;IACrC;EACF;;EAEA,SAASC,gBAAgBA,CAACV,EAAE,EAAE;IAC5BO,QAAQ,CAAED,KAAK,IAAKA,KAAK,CAACK,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC7D;EAEA,SAASY,gBAAgBA,CAACZ,EAAE,EAAE;IAC5Ba,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGd,EAAE,CAAC;IACrCO,QAAQ,CAAED,KAAK,IACbA,KAAK,CAACS,GAAG,CAAEN,IAAI,IACbA,IAAI,CAACT,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGS,IAAI;MAAEN,MAAM,EAAE,CAACM,IAAI,CAACN;IAAO,CAAC,GAAGM,IACvD,CACF,CAAC;EACH;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASO,eAAeA,CAAA,EAAG;IACzB,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAC9B,4CACF,CAAC,CAAC,CAAC;IACH,IAAIF,SAAS,EAAEV,QAAQ,CAAC,EAAE,CAAC;EAC7B;EAEA,oBACET,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACL,IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACR3B,OAAA,CAACJ,IAAI;MAACgC,UAAU,EAAElB;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpC3B,OAAA,CAACH,WAAW;MACVW,KAAK,EAAEA,KAAM;MACbqB,YAAY,EAAEjB,gBAAiB;MAC/BkB,aAAa,EAAEhB,gBAAiB;MAChCiB,WAAW,EAAEb;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF3B,OAAA,CAACF,KAAK;MAACU,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACpB,EAAA,CArDuBD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}